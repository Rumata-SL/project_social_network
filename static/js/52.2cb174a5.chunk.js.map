{"version":3,"file":"static/js/52.2cb174a5.chunk.js","mappings":"wOACA,EAA0B,uBAA1B,EAA6D,yBAA7D,EAAsG,6BAAtG,EAAmJ,6BAAnJ,EAAqM,kCAArM,EAA+O,qBAA/O,EAA8Q,uBAA9Q,EAAiT,yB,4ECoBpSA,EAA4B,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAMhD,OACI,8BACKA,GAAS,SAAC,KAAD,CAAUC,GAAI,cACpB,SAACC,EAAD,CAAgBC,SARX,SAACC,GACdL,EAAQK,EAASC,MAAOD,EAASE,SAAUF,EAASG,kBAuB/CC,GAAiBC,EAAAA,EAAAA,KAFN,SAACC,GAAD,MAA0B,CAACV,OAAQU,EAAMC,KAAKX,UAEf,CAACD,QAAAA,EAAAA,IAA1BU,CAAoCX,GAG9Dc,GAAcC,EAAAA,EAAAA,IAAiB,IAEtBC,EAAiD,SAACC,GAC3D,IAAOC,EAAuBD,EAAvBC,aAAcC,EAASF,EAATE,MACrB,OAAO,iBAAKC,UAAWC,EAAhB,WACH,0BAAK,eAAID,UAAWC,EAAf,sBAEL,gBAAKD,UAAWC,EAAhB,UACI,kBAAMhB,SAAUa,EAAcE,UAAWC,EAAzC,WACI,iBAAKD,UAAWC,EAAhB,WACI,qCACA,SAACC,EAAA,EAAD,CAAOF,UAAWC,EACXE,UAAWC,EAAAA,EACXC,YAAa,QACbC,KAAM,QACNC,SAAU,CAACC,EAAAA,GAAUd,EAAae,EAAAA,UAG7C,iBAAKT,UAAWC,EAAhB,WACI,wCACA,SAACC,EAAA,EAAD,CACOF,UAAWC,EACXE,UAAWC,EAAAA,EACXC,YAAa,WACbC,KAAM,WACNI,KAAM,WACNH,SAAU,CAACC,EAAAA,GAAUd,EAAae,EAAAA,UAG7C,4BACI,SAACP,EAAA,EAAD,CAAOC,UAAW,QACXE,YAAa,aACbC,KAAM,aACNI,KAAK,aAJhB,iBAQCX,GACG,gBAAKC,UAAWC,EAAhB,SAA8BF,KAC5B,gBAAKC,UAAWC,EAAhB,uBACN,0BACI,mBAAQS,KAAK,SAAb,+BAOd1B,GAAiB2B,EAAAA,EAAAA,GAAwB,CAC3CC,KAAM,SADaD,CAEpBf","sources":["webpack://samurai-way/./src/Components/LoginComponent/Login.module.css?a183","Components/LoginComponent/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__-Y90d\",\"container\":\"Login_container__ILImz\",\"containerForm\":\"Login_containerForm__4NWFz\",\"wrapperHeader\":\"Login_wrapperHeader__-WpQA\",\"containerFormInput\":\"Login_containerFormInput__S8fEM\",\"field\":\"Login_field__ItbJk\",\"noError\":\"Login_noError__n83zM\",\"formerror\":\"Login_formerror__CD54W\"};","import React, {FC} from \"react\";\r\nimport s from \"./Login.module.css\"\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {loginTC} from \"../../Redux/reducers/AuthReducer\";\r\nimport {AppStoreType} from \"../../Redux/reducers/reduxStore\";\r\nimport {Input} from \"../../common/FormControl/FormsControls\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {\r\n    maxLengthCreator,\r\n    minLength2,\r\n    required\r\n} from \"../../utils/validators/validator\";\r\n\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const Login: FC<LoginPropsType> = ({loginTC, isAuth}) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        loginTC(formData.email, formData.password, formData.rememberMe)\r\n\r\n    }\r\n\r\n    return (\r\n        < >\r\n            {isAuth ? <Redirect to={\"/profile\"}/> :\r\n                <LoginReduxForm onSubmit={onSubmit}/>}\r\n        </>\r\n    );\r\n};\r\n\r\ntype LoginPropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\ntype mapDispatchToPropsType = {\r\n    loginTC: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStoreType) => ({isAuth: state.auth.isAuth})\r\n\r\nexport const LoginContainer = connect(mapStateToProps, {loginTC})(Login)\r\n\r\n\r\nlet maxLength20 = maxLengthCreator(20)\r\n\r\nexport const LoginForm: FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    const {handleSubmit, error} = props\r\n    return <div className={s.wrapper}>\r\n        <div><h4 className={s.wrapperHeader}>LOGIN</h4>\r\n        </div>\r\n        <div className={s.container}>\r\n            <form onSubmit={handleSubmit} className={s.containerForm}>\r\n                <div className={s.containerFormInput}>\r\n                    <span>login</span>\r\n                    <Field className={s.field}\r\n                           component={Input}\r\n                           placeholder={\"Email\"}\r\n                           name={\"email\"}\r\n                           validate={[required, maxLength20, minLength2]}\r\n                    />\r\n                </div>\r\n                <div className={s.containerFormInput}>\r\n                    <span>password</span>\r\n                    <Field\r\n                           className={s.field}\r\n                           component={Input}\r\n                           placeholder={\"Password\"}\r\n                           name={\"password\"}\r\n                           type={\"password\"}\r\n                           validate={[required, maxLength20, minLength2]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field component={\"input\"}\r\n                           placeholder={\"rememberMe\"}\r\n                           name={\"rememberMe\"}\r\n                           type=\"checkbox\"\r\n                    />remember me\r\n                </div>\r\n                {/*{props.error && <div className={s.error}><span>{props.error}</span></div>}*/}\r\n                {error ?\r\n                    <div className={s.formerror}>{error}</div>\r\n                    : <div className={s.noError}>no error</div>}\r\n                <div>\r\n                    <button type=\"submit\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({\r\n    form: \"login\"\r\n})(LoginForm)"],"names":["Login","loginTC","isAuth","to","LoginReduxForm","onSubmit","formData","email","password","rememberMe","LoginContainer","connect","state","auth","maxLength20","maxLengthCreator","LoginForm","props","handleSubmit","error","className","s","Field","component","Input","placeholder","name","validate","required","minLength2","type","reduxForm","form"],"sourceRoot":""}