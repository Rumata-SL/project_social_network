{"version":3,"file":"static/js/7.2e5511aa.chunk.js","mappings":"+KACA,EAA0B,yBAA1B,EAA4D,wBAA5D,EAA2H,yB,SCO9GA,EAAgC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAC3C,OACI,gBAAKC,UAAWC,EAAhB,SAA6BF,K,UCDxBG,EAA6B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,GAC9C,OACI,SAAC,KAAD,CAASJ,UAAWK,EAAWC,GAAE,mBAAcF,EAAd,KAAjC,SAAuDD,K,sCCF3DI,GAAcC,EAAAA,EAAAA,IAAiB,IAsBtBC,GAAsBC,EAAAA,EAAAA,GAAwB,CACvDC,KAAM,wBADyBD,EArBgC,SAACE,GAChE,OAAO,0BACH,kBAAMC,SAAUD,EAAME,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EACXd,KAAM,iBACNe,YAAa,qBACbC,SAAU,CAACC,EAAAA,GAAUb,EAAac,EAAAA,SAG7C,0BACI,mBAAQC,KAAM,SAAd,4B,uCCEHC,GAAmBC,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAdrC,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAME,aAAaD,MAC1BE,SAAUH,EAAME,aAAaC,aAGV,SAACC,GACxB,MAAO,CACHC,mBAAoB,SAAChC,GACjB+B,GAASE,EAAAA,EAAAA,GAAcjC,SAKwEkC,EAAAA,EAA3ET,ECJa,SAAC,GAMxC,IAJEG,EAIH,EAJGA,MACAE,EAGH,EAHGA,SACAE,EAEH,EAFGA,mBAIAG,EAAiBP,EAAMQ,KAAI,SAAAC,GAAC,OAC5B,SAAClC,EAAD,CAAuBC,KAAMiC,EAAEjC,KAAMC,GAAIgC,EAAEhC,IAA1BgC,EAAEhC,OACnBiC,EAAkBR,EAASM,KAAI,SAAAG,GAAC,OAChC,SAACxC,EAAD,CAAoBC,eAAgBuC,EAAEC,SAAxBD,EAAElC,OAMpB,OACI,iBAAKJ,UAAWoC,EAAhB,WACI,gBAAKpC,UAAWoC,EAAhB,SACKF,KAGL,iBAAKlC,UAAWoC,EAAhB,WACI,yBAAMC,KACN,SAAC5B,EAAD,CAAqBI,SAZlB,SAAC2B,GACZT,EAAmBS,EAAOzC","sources":["webpack://samurai-way/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/Message.tsx","Components/Dialogs/DialogItem.tsx","Components/Dialogs/AddmessageForm.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__MYrnb\",\"dialog\":\"Dialogs_dialog__OM8Ri\",\"item\":\"Dialogs_item__1cGxG\",\"message\":\"Dialogs_message__8PzW9\"};","import React, {FC} from \"react\";\r\nimport dm from \"./Dialogs.module.css\";\r\n\r\n\r\nexport type MessagePropsType = {\r\n    newMessageText: string\r\n};\r\n\r\nexport const Message: FC<MessagePropsType> = ({newMessageText}) => {\r\n    return (\r\n        <div className={dm.message}>{newMessageText}</div>\r\n    )\r\n};\r\n","import React, {FC} from \"react\";\r\nimport du from \"./Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type DialogItem = {\r\n    id: string\r\n    name: string\r\n};\r\n\r\nexport const DialogItem: FC<DialogItem> = ({name, id}) => {\r\n    return (\r\n        <NavLink className={du.dialog} to={`/dialogs/${id}*`}>{name}</NavLink>\r\n    )\r\n};\r\n","import React, {FC} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/FormControl/FormsControls\";\r\nimport {\r\n    required,\r\n    minLength2,\r\n    maxLengthCreator,\r\n} from \"../../utils/validators/validator\";\r\n\r\nlet maxLength50 = maxLengthCreator(50)\r\nexport const AddMessageForm: FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       name={\"newMessageText\"}\r\n                       placeholder={\"Enter your message\"}\r\n                       validate={[required, maxLength50, minLength2]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type={\"submit\"}>Send</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport type FormDataType = {\r\n    newMessageText: string\r\n}\r\n\r\nexport const AddMessageReduxForm = reduxForm<FormDataType>({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {AppStoreType} from \"../../Redux/reducers/reduxStore\";\r\nimport {WithAuthRedirect} from \"../../Hoc/WithAuthRedirect\";\r\nimport {MessagesPageType, SendMessageAC} from \"../../Redux/reducers/MessageReducer\";\r\n\r\n\r\nconst mapStateToProps = (state: AppStoreType):MessagesPageType => {\r\n    return {\r\n        users: state.messagesPage.users,\r\n        messages: state.messagesPage.messages,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageText:string) => {\r\n            dispatch(SendMessageAC(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Dialogs)\r\n\r\n\r\n// export default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Dialogs)\r\n// export const DialogsContainer = WithAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Dialogs))\r\n/*const RedirectComponent = (props:DialogsTypeProps) => {\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    return <Dialogs {...props}/>\r\n}*/","import React, {FC} from \"react\";\r\nimport {Message} from \"./Message\";\r\nimport d from \"./Dialogs.module.css\"\r\nimport {DialogItem} from \"./DialogItem\";\r\nimport {MessagesType, UsersType} from \"../../Redux/reducers/MessageReducer\";\r\n\r\nimport {\r\n    AddMessageReduxForm,\r\n    FormDataType\r\n} from \"./AddmessageForm\";\r\n\r\n\r\nexport type DialogsTypeProps = {\r\n    users: Array<UsersType>\r\n    messages: Array<MessagesType>\r\n\r\n    onSendMessageClick: (newMessageText: string) => void\r\n}\r\n\r\nexport const Dialogs: FC<DialogsTypeProps> = (\r\n    {\r\n        users,\r\n        messages,\r\n        onSendMessageClick,\r\n    }\r\n) => {\r\n\r\n    let dialogsElement = users.map(d =>\r\n        <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElement = messages.map(m =>\r\n        <Message key={m.id} newMessageText={m.message}/>)\r\n\r\n    const Submit = (values: FormDataType) => {\r\n        onSendMessageClick(values.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={d.dialogs}>\r\n            <div className={d.dialog}>\r\n                {dialogsElement}\r\n\r\n            </div>\r\n            <div className={d.message}>\r\n                <div>{messagesElement}</div>\r\n                <AddMessageReduxForm onSubmit={Submit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Message","newMessageText","className","dm","DialogItem","name","id","du","to","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","minLength2","type","DialogsContainer","compose","connect","state","users","messagesPage","messages","dispatch","onSendMessageClick","SendMessageAC","WithAuthRedirect","dialogsElement","map","d","messagesElement","m","message","values"],"sourceRoot":""}